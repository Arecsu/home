---
import BaseLayout from "@layouts/Base.astro"
import FooterLarge from "@components/FooterLarge.astro"

interface Props {
   title: string
   hasAlternateVersion?: boolean
   alternateLang?: string
   alternateSlug?: string
   alternateLabel?: string
}

const { 
   title, 
   hasAlternateVersion, 
   alternateLang, 
   alternateSlug,
   alternateLabel 
} = Astro.props
---
<BaseLayout title={title}>
	{hasAlternateVersion && (
		<div class="article-language">
				<a 
					href={`/reflections/${alternateLang}/${alternateSlug}`} 
					id="article-button-lang-switch"
				>{alternateLabel}</a>
		</div>
	)}
   <main class="reflections-page-wrapper">
      <h1 class="reflections-page-title">{title}</h1>
      <slot />
   </main>
   <FooterLarge />
</BaseLayout>

<style lang="scss">
	main {
		display: grid;
		pointer-events: none;
		// grid-template-columns: subgrid;
		grid-column: 2 / -2;
		// grid-row: main-content;
		// grid-row: 1 / -1;
		grid-row: header / main-content;
		grid-auto-rows: min-content;
		grid-template-columns: 1fr min(70ch, 100%) 1fr;
		min-height: calc(100vh - $margin-page-1);
		align-content: center;
		justify-items: center;
	}

	.article-language {
		grid-row: header;
		grid-column: header-contact-start / main-content-end;
		justify-self: end;
		display: flex;
		gap: 0.8em;
		font-size: 0.9rem;
		text-transform: uppercase;
	}

	.reflections-page-title {
		@include inter-text;
		font-size: 1em;
		text-transform: uppercase;
		font-weight: 400;
		// letter-spacing: -.01em;
		margin-left: -0.055em;
		place-self: normal;
		margin-bottom: 1rem;
		text-wrap-style: balance;
		text-align: center;
		span {
			float: right;
		}
		@media (max-width: $mobile-layout-breakpoint-1) {
			// margin-bottom: -0.5rem;
		}
	}
</style>

<style is:global lang="scss">
	.reflections-page-wrapper {
		$space-between-h2-sections: 0.9rem;
		$space-between-h2-sections-mobile: 0.4rem;
		overflow-x: hidden;
		
		h2 {
			grid-column: heading;
			text-transform: uppercase;
			justify-self: end;
			margin-block: $space-between-h2-sections 0;
		
			@media (max-width: $mobile-layout-breakpoint-1) {
				justify-self: start;
				// margin-block: 1em;
				// margin-top: .5rem;
			}
			& + *:not(h2) {
				margin-top: $space-between-h2-sections;
				@media (max-width: $mobile-layout-breakpoint-1) {
					margin-top: $space-between-h2-sections-mobile;
				}
			}			
		}
		// > :where(:not(h1, h1 *, h2)) { 
		> * { 
			@include inter-text;
			grid-column: 2 / 3;
			width: 100%;
			pointer-events: auto;
		}
		> *:last-child { 
			margin-bottom: clamp(5rem, min(10vh, 20%), 7rem);
			// margin-bottom: 15vh;
			// margin-bottom: 20%;
		}
		p {
			// text-align: justify;
		}

		p, ul {
			// text-wrap: pretty;
			margin-block: 0em .6em;
			// letter-spacing: -0.010em;
  			line-height: 1.65;
			@media (max-width: $mobile-layout-breakpoint-1) {
				margin-block: .3em .6em;
			}
		}
		h3 {
			margin-block: .7em .4em;
			letter-spacing: -0.02em;
			font-weight: 520;
			font-size: 1.6em;
			// text-transform: uppercase;
			// text-transform: lowercase;
			// font-size: 1.4em;
		}

		:where(.full-width) {
			grid-column: 1 / -1;
			max-width: 100%;
		}
	}
</style>

