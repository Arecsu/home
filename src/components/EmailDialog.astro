---
import Icon from "@components/Icon.astro"
import IconMail from "~icons/ri/mail-line"
import IconClose from "~icons/ri/close-line"
import IconCopy from "~icons/ri/file-copy-2-line"
import IconCheck from "~icons/ri/checkbox-circle-fill"
// base64 x2
const encodedEmail = "WVd4bGFtRnVaSEp2UUcxaGNuUjVjaTV6YUc5dw=="

---

<dialog class="email-dialog">
   <div class="dialog-content">
      <form method="dialog">
         <button class="close " formmethod="dialog">
            <Icon size="0.95em" marginInline="0 0.1em"><IconClose /></Icon>
         </button>
      </form>
      <div class="email-wrapper">
         <h4>email</h4>
         <div>
            <span class="email" data-email={encodedEmail}>hellobots@notreal.com</span>
         </div>
      </div>
      <button class="copy-email btn-style-1">
         <span class="copy-text">
            <Icon size="0.95em"><IconCopy /></Icon> copy
         </span>
         <span class="copied-text">
            <Icon size="1em"><IconCheck /></Icon>
         </span>
      </button>
      <a href="" class="no-underline send-mail btn-style-1">
         <Icon size="0.95em" marginInline="0 0.1em"><IconMail /></Icon> send mail
      </a>
   </div>
</dialog>

<script>
   declare global {
     interface EmailDialog extends HTMLDialogElement {
       init: () => void
     }
   }

   let emailDialog: EmailDialog

   
   const copyEmail = () => {
      const emailSpan = emailDialog.querySelector<HTMLSpanElement>('.email')!
      const copyEmailButton = emailDialog.querySelector<HTMLButtonElement>('.copy-email')!

      navigator.clipboard.writeText(emailSpan.dataset.emailDecoded!)
      copyEmailButton.disabled = true
      copyEmailButton.querySelector<HTMLSpanElement>('.copy-text')!.style.visibility = 'hidden'
      copyEmailButton.querySelector<HTMLSpanElement>('.copied-text')!.style.visibility = 'visible'
      
      setTimeout(() => {
         copyEmailButton.disabled = false
         copyEmailButton.querySelector<HTMLSpanElement>('.copy-text')!.style.visibility = 'visible'
         copyEmailButton.querySelector<HTMLSpanElement>('.copied-text')!.style.visibility = 'hidden'
      }, 500)
   }

   document.addEventListener('astro:page-load', () => {
      emailDialog = document.querySelector<EmailDialog>('.email-dialog')!

      emailDialog.init = () => {
         emailDialog.querySelector<HTMLButtonElement>('.copy-email')!.addEventListener('click', copyEmail)

         const emailSpan = emailDialog.querySelector<HTMLSpanElement>('.email')!
         const sendMail = emailDialog.querySelector<HTMLAnchorElement>('.send-mail')!

         if (!emailSpan.dataset.emailDecoded) {
            emailSpan.dataset.emailDecoded = atob(atob(emailSpan.dataset.email!.toString()))
            emailSpan.textContent = emailSpan.dataset.emailDecoded
         }
         sendMail.href = 'mailto:' + emailSpan.dataset.emailDecoded
         emailDialog.showModal()
      }

      emailDialog.addEventListener('click', (e) => {
         if (e.target === emailDialog) {
            emailDialog.close()
            emailDialog.querySelector<HTMLButtonElement>('.copy-email')!.removeEventListener('click', copyEmail)
         }
      })
   })

   document.addEventListener('astro:before-preparation', () => {
      emailDialog.querySelector<HTMLButtonElement>('.copy-email')!.removeEventListener('click', copyEmail)
   })
</script>

<style lang="scss">
   
   dialog::backdrop {
      background-color: color-mix(in sRGB, var(--page-color-background, white), transparent 10%);
      backdrop-filter: blur(4px);
   }	

   .email-dialog {
      // position: absolute;
      // margin: 5rem 0 0 calc($header-gap + $margin-page-1 + 4rem);
      margin: max(5rem, 20vh) auto 0 auto;
      background: var(--page-color-background, white);
      color: var(--page-color-foreground, black);
      border: 0.0625em solid var(--page-color-foreground, black);

   }

   .dialog-content {
      display: grid;
      grid-template-areas:
         "close close"
         "email email"
         "copy send";
      padding: 0.8rem 0.8rem;

      .email-wrapper {
         grid-area: email;
         margin-block: 1em 1.6em;
      }

      .send-mail {
         grid-area: send;
         justify-self: end;
      }

      .close {
         grid-area: close;
      }

      .copy-email {
         grid-area: copy;
         display: grid;
         margin-left: 3em;
         margin-right: 1em;

         > * {
            grid-area: 1/1/-1/-1;
            place-self: center;
         }
         
         .copied-text {
            visibility: hidden;
         }
      }
   }

      
</style>