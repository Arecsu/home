---
import Icon from "@components/Icon.astro"
import IconMail from "~icons/ri/mail-line"
import IconClose from "~icons/ri/close-line"

// base64 x2
const encodedEmail = "WVd4bGFtRnVaSEp2UUcxaGNuUjVjaTV6YUc5dw=="

---

<dialog is="email-dialog" class="email-dialog">
   <div class="dialog-content">
      <form method="dialog">
         <button class="close " formmethod="dialog">
            <Icon size="0.95em" marginInline="0 0.1em"><IconClose /></Icon>
         </button>
      </form>
      <div class="email-wrapper">
         <h4>email</h4>
         <span class="email" data-email={encodedEmail}>hellobots@notreal.com</span>
      </div>
      <a href="" class="no-underline send-mail btn-style-1">
         <Icon size="0.95em" marginInline="0 0.1em"><IconMail /></Icon> send mail
      </a>
   </div>
</dialog>

<script>
   declare global {
     interface EmailDialog extends HTMLDialogElement {
       init: () => void
     }
   }

   class EmailDialog extends HTMLDialogElement {
      private emailSpan: HTMLSpanElement
      private sendMail: HTMLAnchorElement

      constructor() {
         super()
         this.emailSpan = this.querySelector<HTMLSpanElement>('.email')!
         this.sendMail = this.querySelector<HTMLAnchorElement>('.send-mail')!
         this.addEventListener('click', (e) => {
            if (e.target === this) {
               this.close()
            }
         })
      }

      init() {
         this.emailSpan.textContent = atob(atob(this.emailSpan.getAttribute('data-email')!.toString()))
         this.sendMail.href = 'mailto:' + this.emailSpan.textContent
         this.showModal()
      }
   }

   customElements.define('email-dialog', EmailDialog, { extends: 'dialog' })
</script>

<style>
   
   dialog::backdrop {
      background-color: color-mix(in sRGB, var(--page-color-background, white), transparent 10%);
      backdrop-filter: blur(4px);
   }	

   .email-dialog {
      // position: absolute;
      // margin: 5rem 0 0 calc($header-gap + $margin-page-1 + 4rem);
      margin: max(5rem, 20vh) auto 0 auto;
      background: var(--page-color-background, white);
      color: var(--page-color-foreground, black);
      border: 1px solid var(--page-color-foreground, black);

   }

   .dialog-content {
      display: grid;
      grid-template-areas:
         "close"
         "email"
         "send";
      padding: 0.8rem;

      .email-wrapper {
         grid-area: email;
         margin-block: 1em 1.3em;
      }

      .send-mail {
         grid-area: send;
         justify-self: end;
      }

      .close {
         grid-area: close;
      }
   }
</style>