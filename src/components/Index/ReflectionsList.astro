---
import type { CollectionEntry } from 'astro:content';
import { REFLECTIONS_LANGUAGES, type SupportedReflectionsLang } from "@/languages.ts"
import ReflectionsDate from '@components/ReflectionsDate.astro'

interface Props {
  reflections: CollectionEntry<'reflections'>[];
  locale: typeof REFLECTIONS_LANGUAGES[SupportedReflectionsLang]['locale'];
  langClass: typeof REFLECTIONS_LANGUAGES[SupportedReflectionsLang]['htmlLangClass'];
}

const { reflections, locale, langClass } = Astro.props;
---

<ul class={`unstyled-list links-no-underline ${langClass}`}>
  {reflections.map((reflections) => (
    <li>
      <a href={`/reflections/${reflections.slug}`}>
        <span class="title">{reflections.data.title}</span>
        { reflections.data.date && (
          <ReflectionsDate 
            locale={locale} 
            date={reflections.data.date}
          />
        )}
      </a>
    </li>
  ))}
</ul>

<style lang="scss">
  li {
    margin-bottom: 0;
  }

  li a {
    display: flex;
    gap: 4ch;
    width: min(100%, 50ch);
    align-items: center;
    line-height: 2;

    span.title {
      display: inline-block;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      flex-grow: 1;
    }

    span.date {
      // font-size: 0.86em;
    }
  }

  	// Add these new styles for language switching
	.lang-es,
	.lang-en {
		display: none;
	}

	:global(html[data-lang="es"]) .lang-es,
	:global(html[data-lang="en"]) .lang-en {
		display: block;
	}
</style> 