---
import { getCollection } from "astro:content";
import WorkPageLayout from "@layouts/WorkPage.astro"
import { NOTES_LANGUAGES, type SupportedNotesLang } from "@/languages.ts"

export async function getStaticPaths() {
  const allNotes = await getCollection('notes');
  const supportedLanguages = Object.keys(NOTES_LANGUAGES);
  
  return allNotes.map(entry => {
    const [lang, slug] = entry.slug.split('/');
    
    if (supportedLanguages.includes(lang as SupportedNotesLang)) {
      const otherLang = Object.keys(NOTES_LANGUAGES).find(l => l !== lang);
      const alternateNote = allNotes.find(note => 
        note.slug === `${otherLang}/${slug}`
      );

      return {
        params: { 
          lang,
          slug: slug
        },
        props: { 
          entry,
          hasAlternateVersion: !!alternateNote
        },
      };
    }
  }).filter(Boolean);
}

const { entry, hasAlternateVersion } = Astro.props;
const { Content } = await entry.render();
const { lang, slug } = Astro.params as { lang: SupportedNotesLang; slug: string };

const alternateLang = Object.keys(NOTES_LANGUAGES).find(l => l !== lang) as SupportedNotesLang;
---

<WorkPageLayout title={entry.data.title}>
  {hasAlternateVersion && (
    <a href={`/notes/${alternateLang}/${slug}`}>
      Read in {NOTES_LANGUAGES[alternateLang].label}
    </a>
  )}
  <Content />
</WorkPageLayout> 